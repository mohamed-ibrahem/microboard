$left: right;
$right: left;

.rtl {
  direction: rtl;
  text-align: right;

  div.dataTables_wrapper div.dataTables_filter {
    text-align: left;
    float: left;
  }

  trix-toolbar .trix-button-group:not(:first-child) {
    margin-right: 1.5vw;
    margin-left: 0;
  }

  &.g-sidenav-pinned .sidenav + .main-content {
    margin-right: 250px;
    margin-left: 0 !important;
  }

  .breadcrumb-item + .breadcrumb-item {
    padding-left: 0;
    padding-right: 0.5rem;

    &:before {
      padding-left: 0.5rem;
      padding-right: 0;
    }
  }

  .sidenav {
    // direction: initial;
    .navbar-nav {
      padding-right: 0;
    }

    .navbar-nav .nav-link > i {
      min-width: auto;
      margin-left: 1rem;
    }

    .navbar-nav .nav-link[data-toggle="collapse"]:after {
      margin-right: auto;
      margin-left: initial;
      transform: rotate(180deg);
    }

    .navbar-nav .nav-link[data-toggle="collapse"][aria-expanded="true"]:after {
      transform: rotate(90deg) !important;
    }

    .navbar-nav .nav .nav-link {
      padding-right: 15px;
    }

    .sidenav-toggler.active .sidenav-toggler-line:first-child {
      transform: translateX(0);
    }

    .sidenav-toggler.active .sidenav-toggler-line:last-child {
      transform: translateX(0);
    }

    .navbar-heading {
      text-align: right;
    }

    .scrollbar-inner {
      .navbar-nav {
        direction: rtl;
      }
    }
  }

  .navbar-vertical.navbar-expand-xs.fixed-left {
    left: initial;
    right: 0;
  }

  .sidenav + .main-content {
    margin-right: 62px;
    margin-left: 0 !important;
  }

  .custom-control {
    padding-right: 1.5rem;
    padding-left: initial;

    .custom-control-input {
      left: initial;
      right: 0;
    }

    .custom-control-label {
      &:after, &:before {
        left: initial;
        right: -1.75rem;
      }
    }
  }

  .sidenav .navbar-heading .docs-mini {
    padding-left: 0;
    padding-right: 3px;
  }

  .navbar-vertical.navbar-expand-xs .navbar-nav .nav .nav-link span.sidenav-normal {
    padding-right: 8px;
  }

  .table .thead-light [data-sort]::after {
    margin-left: initial;
    margin-right: 0.25rem;
  }

  .dropdown-menu {
    text-align: right !important;

    &.dropdown-menu-right {
      left: 0 !important;
      right: auto !important;
    }
    .dropdown-item {
      > i,
      > svg {
        margin-right: initial;
        margin-left: 1rem;
      }
    }
  }

  .card .card-body {
    text-align: right;
  }

  .text-right {
    text-align: $right !important;
  }

  .text-left {
    text-align: $left !important;
  }

  .nav {
    padding-#{$left}: 0;
  }

  .navbar-nav .nav-item {
    float: $right;
  }

  .datepicker table tr td.day.range-end {
    border-radius: 50% 0 0 50% !important;
  }

  .datepicker table tr td.day.range-start {
    border-radius: 0 50% 50% 0 !important;
  }

  .alert-dismissible {
    padding-#{$right}: 4rem;
    padding-#{$left}: 1.25rem;
  }

  .alert-icon {
    margin-right: 0;
    margin-left: 1.25rem;
  }

  .dropdown-menu:not(.dropdown-menu-left) {
    #{$left}: 0;
    #{$right}: auto;

    &:before {
      #{$right}: initial !important;
      #{$left}: 20px;
    }
  }

  .dropdown-menu:not(.dropdown-menu-right) {
    #{$left}: 0;
    #{$right}: auto;

    &:before {
      #{$right}: initial !important;
      #{$left}: 20px;
    }
  }

  .dropdown-menu .dropdown-item > i, .dropdown-menu .dropdown-item > svg {
    margin-left: 1rem;
    margin-right: initial !important;
  }

  .checkbox label {
    padding-#{$right}: 1.25rem;
    padding-#{$left}: inherit;
  }

  .btn:not(:last-child) {
    margin-left: 0.5rem;
    margin-right: inherit !important;
  }

  .btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) {
    @include border-radius(0 $border-radius $border-radius 0);
  }

  .btn-group > .btn:last-child:not(:first-child),
  .btn-group > .dropdown-toggle:not(:first-child) {
    @include border-radius($border-radius 0 0 $border-radius);
  }

  .btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {
    @include border-radius($border-radius 0 0 $border-radius);
  }

  .input-group:not(.input-group-alternative) .input-group-prepend .input-group-text {
    border-#{$left}: 1px solid $border-color;
    border-#{$right}: 0;
  }

  .focused .input-group-text {
    border-#{$left}-color: $primary;
  }

  .input-group > .input-group-append:last-child > .btn:not(:last-child):not(.dropdown-toggle),
  .input-group > .input-group-append:last-child > .input-group-text:not(:last-child),
  .input-group > .input-group-append:not(:last-child) > .btn,
  .input-group > .input-group-append:not(:last-child) > .input-group-text,
  .input-group > .input-group-prepend > .btn,
  .input-group > .input-group-prepend > .input-group-text {
    @include border-radius(0 $border-radius $border-radius 0);
  }

  .input-group > .input-group-append > .btn,
  .input-group > .input-group-append > .input-group-text,
  .input-group > .input-group-prepend:first-child > .btn:not(:first-child),
  .input-group > .input-group-prepend:first-child > .input-group-text:not(:first-child),
  .input-group > .input-group-prepend:not(:first-child) > .btn,
  .input-group > .input-group-prepend:not(:first-child) > .input-group-text {
    @include border-radius($border-radius 0 0 $border-radius);
  }

  .input-group > .custom-select:not(:first-child),
  .input-group > .form-control:not(:first-child) {
    @include border-radius($border-radius 0 0 $border-radius);
  }

  .input-group > .custom-select:not(:last-child),
  .input-group > .form-control:not(:last-child) {
    @include border-radius(0 $border-radius $border-radius 0);
  }

  .input-group > .custom-select:not(:last-child):not(:first-child),
  .input-group > .form-control:not(:last-child):not(:first-child) {
    border-radius: 0;
  }

  .was-validated .form-control:invalid, .form-control.is-invalid {
    padding-right: 0.75rem !important;
    padding-left: calc(1.5em + 1.25rem);
    background-position: center left calc(0.375em + 0.3125rem);
  }

  .custom-control-indicator {
    #{$right}: 0;
    #{$left}: inherit;
  }

  .custom-file-label::after {
    #{$left}: -1px;
    #{$right}: initial;
    border-radius: .25rem 0 0 .25rem;
  }

  .radio input,
  .radio-inline,
  .checkbox input,
  .checkbox-inline input {
    margin-#{$right}: -$list-group-item-padding-x;
    margin-#{$left}: inherit !important;
  }

  .list-group {
    padding-#{$left}: 0;
  }

  .close {
    float: $left;
  }

  .modal-header .close {
    margin-#{$right}: auto;
    margin-#{$left}: - $grid-gutter-width;

    margin-top: - $grid-gutter-width;
    margin-bottom: - $grid-gutter-width;
  }

  .modal-footer > :not(:first-child) {
    margin-#{$right}: .25rem;
  }

  .alert-dismissible .close {
    #{$left}: 0;
    #{$right}: inherit;
  }

  .dropdown-toggle::after {
    margin-#{$left}: 0;
    margin-#{$right}: .255em;
  }

  .form-check-input {
    margin-#{$left}: inherit;
    margin-#{$right}: -$list-group-item-padding-x;
  }

  .form-check-label {
    padding-#{$right}: $list-group-item-padding-x;
    padding-#{$left}: inherit;
  }

  .pagination .page-item:first-child .page-link {
    @include border-radius(0 $border-radius $border-radius 0);
  }

  .pagination .page-item:last-child .page-link {
    @include border-radius($border-radius 0 0 $border-radius);
  }

  .pagination-sm .page-item:first-child .page-link {
    border-top-#{$right}-radius: $border-radius-sm;
    border-bottom-#{$right}-radius: $border-radius-sm;
  }

  .pagination-sm .page-item:last-child .page-link {
    border-top-#{$left}-radius: $border-radius-sm;
    border-bottom-#{$left}-radius: $border-radius-sm;
  }

  .pagination-lg .page-item:first-child .page-link {
    border-top-#{$right}-radius: $border-radius-lg;
    border-bottom-#{$right}-radius: $border-radius-lg;
  }

  .pagination-lg .page-item:last-child .page-link {
    border-top-#{$left}-radius: $border-radius-lg;
    border-bottom-#{$left}-radius: $border-radius-lg;
  }

  .input-group > .custom-file:not(:last-child) .custom-file-label, .input-group > .custom-file:not(:last-child) .custom-file-label::after {
    @include border-radius(0 $border-radius $border-radius 0);
  }

  .table thead th {
    letter-spacing: normal;

    &.sorting:before, &.sorting_asc:before, &.sorting_desc:before, &.sorting_asc_disabled:before, &.sorting_desc_disabled:before {
      left: 1em;
      right: inherit !important;
    }

    &.sorting:after, &.sorting_asc:after, &.sorting_desc:after, &.sorting_asc_disabled:after, &.sorting_desc_disabled:after {
      left: 0.5em;
      right: inherit !important;
    }
  }

  @mixin make-col-offset($size, $columns: $grid-columns) {
    $num: $size / $columns;
    margin-#{$left}: 0;
    margin-#{$right}: if($num == 0, 0, percentage($num));
  }

  @mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
    @each $breakpoint in map-keys($breakpoints) {
      $infix: breakpoint-infix($breakpoint, $breakpoints);
      @include media-breakpoint-up($breakpoint, $breakpoints) {
        @for $i from 0 through ($columns - 1) {
          @if not ($infix == "" and $i == 0) {
            .offset#{$infix}-#{$i} {
              @include make-col-offset($i, $columns);
            }
          }
        }
      }
    }
  }

  @if $enable-grid-classes {
    @include make-grid-columns();
  }

  // stylelint-disable declaration-no-important
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

      @each $size, $length in $spacers {
        .mr#{$infix}-#{$size} {
          margin-#{$right}: $length !important;
          margin-#{$left}: inherit !important;
        }
        .ml#{$infix}-#{$size} {
          margin-#{$right}: inherit !important;
          margin-#{$left}: $length !important;
        }
      }

      @each $size, $length in $spacers {
        .pr#{$infix}-#{$size} {
          padding-#{$left}: $length !important;
          padding-#{$right}: inherit !important;
        }
        .pl#{$infix}-#{$size} {
          padding-#{$left}: inherit !important;
          padding-#{$right}: $length !important;
        }
      }
      .mr#{$infix}-auto {
        margin-#{$left}: 0 !important;
        margin-#{$right}: auto !important;
      }
      .ml#{$infix}-auto {
        margin-#{$left}: auto !important;
        margin-#{$right}: 0 !important;
      }
    }
  }

  @media (min-width: 768px) {
    .navbar-nav {
      padding-left: 0;
      padding-right: 0;
    }

    .navbar-vertical.navbar-expand-md.fixed-left {
      left: inherit;
      right: 0;

      .navbar-nav {
        padding-left: 0;
        padding-right: 0;
      }
    }

    .navbar-vertical.navbar-expand-md.fixed-left + .main-content {
      margin-left: inherit !important;
      margin-right: 250px;
    }
  }

  @media (max-width: 1199.98px) {
    .sidenav {
      transform: translateX(62px);

      & + .main-content {
        margin-right: 0 !important;
      }
    }

    .sidenav-toggler.active .sidenav-toggler-line:first-child {
      transform: translateX(0);
    }

    .sidenav-toggler.active .sidenav-toggler-line:last-child {
      transform: translateX(0);
    }

    &.g-sidenav-pinned .sidenav {
      transform: translateX(0) !important;
    }
  }
  @media(max-width: 576px) {
    .navbar-expand .navbar-nav .nav-link {
      padding-left: 0;
    }
    &.g-navbar-search-show .navbar-search .close {
      left: 0;
      right: auto;
    }
    .navbar-search {
      transform: translateX(150%);
    }

    &.g-navbar-search-shown .navbar-search {
      transform: translateX(0);
    }
  }
}

.rtl + #nprogress {
  .spinner {
    right: 206px;
    left: initial;
  }
}
.rtl.g-sidenav-hidden:not(.g-sidenav-show) + #nprogress {
  .spinner {
    right: 15px;
    left: initial;
  }
}

.swal2-rtl .swal2-actions .btn:not(:last-child) {
  margin-left: 0.5rem;
  margin-right: 0 !important;
}
